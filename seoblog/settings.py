"""
Django settings for seoblog project.

Generated by 'django-admin startproject' using Django 3.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/



# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True закомментировал и добавил строку ниже при публикации проекта
DEBUG = bool( os.environ.get('DJANGO_DEBUG', True) ) #при развертывании, если просто указать Debug = True - все ломается на локальном сервере, стили не загружаются


ALLOWED_HOSTS = [] #при развертывании, до переноса в зону eu было mysterious-castle-84410.herokuapp.com, доб.

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
        'LOCATION': '/tmp/memcached.sock',
    }
} #при развертывании
SECURE_SSL_REDIRECT = True #при развертывании, при развертывании должен быть указан True, но с ним локальный сервер не работает
SESSION_COOKIE_SECURE = True #при развертывании
# Application definition

INSTALLED_APPS = [
    'cms',
    'treebeard',
    'menus',
    'sekizai',
    'djangocms_admin_style',
    'django.contrib.sites',
    'django.contrib.sitemaps',
    'index.apps.IndexConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    # 'compressor', после перезаливки исключил
    # 'django_sass', после перезаливки исключил
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles', #после перезаливки исключил
]
SITE_ID = 1 #это для использования django-cms

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'cms.middleware.user.CurrentUserMiddleware',
    'cms.middleware.page.CurrentPageMiddleware',
    'cms.middleware.toolbar.ToolbarMiddleware',
    'cms.middleware.language.LanguageCookieMiddleware',
]

ROOT_URLCONF = 'seoblog.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,  'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'sekizai.context_processors.sekizai',
                'cms.context_processors.cms_settings',
            ],
        },
    },
]

CMS_TEMPLATES = (
    ('base_articles.html', 'base_articles'), 
    )

WSGI_APPLICATION = 'seoblog.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        # 'NAME': BASE_DIR / 'db.sqlite3', - до django-cms
        'NAME': 'magic',
        'USER': 'magic',
        'PASSWORD': 'password',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]




# LANGUAGE_CODE = 'en-us' - так было до установки django-cms
LANGUAGE_CODE = 'ru'
LANGUAGES = [
    ('ru', 'Russian'),
]

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True



STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

#ниже все по статик после полной перезаливки исключил
# STATICFILES_FINDERS = (
#     'django.contrib.staticfiles.finders.FileSystemFinder',
#     'django.contrib.staticfiles.finders.AppDirectoriesFinder',
#     'compressor.finders.CompressorFinder',
# )
# COMPRESS_ENABLED = True

# COMPRESS_OFFLINE = False
# COMPRESS_OUTPUT_DIR = 'cache'

# COMPRESS_PRECOMPILERS = (
#     ('text/x-scss', 'django_libsass.SassCompiler'),
# )

STATIC_ROOT = os.path.join(BASE_DIR, 'static_root') 
# STATIC_URL = os.environ.get('EDGE_URL', '') + '/static/' #для использования add heroku Edge

MEDIA_ROOT = os.path.join(BASE_DIR, '')

MEDIA_URL = '/media/' 





EMAIL_USE_SSL = True #!!!возможные проблемы: блокировка антивирусом соединения по протоколу SSL и возможно отдельно прослушивание и блокировка порта, например 465

EMAIL_HOST = '' #Например, smtp.gmail.com
EMAIL_HOST_USER = '' #Например, user@gmail.com. Именно его необходимо указывать как ВАШ_EMAIL_ДЛЯ_ОТПРАВКИ_СООБЩЕНИЯ в исходном коде предыдущего пункта
EMAIL_HOST_PASSWORD = ''
EMAIL_PORT = 465


# Heroku: Update database configuration from $DATABASE_URL. Установлено по рекомендационным мотериалам мозилы
import dj_database_url
db_from_env = dj_database_url.config(conn_max_age=500)
DATABASES['default'].update(db_from_env)

# Simplified static file serving. Установлено по рекомендационным мотериалам мозилы
# https://warehouse.python.org/project/whitenoise/
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage' #обеспечивает работу\доступ к static файлам при Debug False 'whitenoise.middleware.WhiteNoiseMiddleware', + после перезаливки исключил